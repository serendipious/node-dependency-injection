{"/Users/ark/GitHub/node-dependency-injection/tst/test-index.ts":{"path":"/Users/ark/GitHub/node-dependency-injection/tst/test-index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":34,"column":4}},"15":{"start":{"line":19,"column":18},"end":{"line":26,"column":5}},"16":{"start":{"line":20,"column":8},"end":{"line":24,"column":10}},"17":{"start":{"line":21,"column":21},"end":{"line":21,"column":23}},"18":{"start":{"line":22,"column":12},"end":{"line":22,"column":95}},"19":{"start":{"line":22,"column":29},"end":{"line":22,"column":95}},"20":{"start":{"line":22,"column":77},"end":{"line":22,"column":95}},"21":{"start":{"line":23,"column":12},"end":{"line":23,"column":22}},"22":{"start":{"line":25,"column":8},"end":{"line":25,"column":26}},"23":{"start":{"line":27,"column":4},"end":{"line":33,"column":6}},"24":{"start":{"line":28,"column":8},"end":{"line":28,"column":46}},"25":{"start":{"line":28,"column":35},"end":{"line":28,"column":46}},"26":{"start":{"line":29,"column":21},"end":{"line":29,"column":23}},"27":{"start":{"line":30,"column":8},"end":{"line":30,"column":137}},"28":{"start":{"line":30,"column":25},"end":{"line":30,"column":137}},"29":{"start":{"line":30,"column":38},"end":{"line":30,"column":50}},"30":{"start":{"line":30,"column":56},"end":{"line":30,"column":57}},"31":{"start":{"line":30,"column":78},"end":{"line":30,"column":137}},"32":{"start":{"line":30,"column":102},"end":{"line":30,"column":137}},"33":{"start":{"line":31,"column":8},"end":{"line":31,"column":40}},"34":{"start":{"line":32,"column":8},"end":{"line":32,"column":22}},"35":{"start":{"line":35,"column":22},"end":{"line":37,"column":1}},"36":{"start":{"line":36,"column":4},"end":{"line":36,"column":62}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":62}},"38":{"start":{"line":39,"column":15},"end":{"line":39,"column":46}},"39":{"start":{"line":40,"column":15},"end":{"line":40,"column":46}},"40":{"start":{"line":41,"column":16},"end":{"line":41,"column":56}},"41":{"start":{"line":42,"column":0},"end":{"line":314,"column":3}},"42":{"start":{"line":44,"column":4},"end":{"line":46,"column":7}},"43":{"start":{"line":45,"column":8},"end":{"line":45,"column":57}},"44":{"start":{"line":47,"column":26},"end":{"line":47,"column":70}},"45":{"start":{"line":47,"column":32},"end":{"line":47,"column":70}},"46":{"start":{"line":48,"column":32},"end":{"line":51,"column":6}},"47":{"start":{"line":48,"column":39},"end":{"line":51,"column":5}},"48":{"start":{"line":52,"column":4},"end":{"line":55,"column":7}},"49":{"start":{"line":53,"column":31},"end":{"line":53,"column":52}},"50":{"start":{"line":54,"column":8},"end":{"line":54,"column":34}},"51":{"start":{"line":56,"column":4},"end":{"line":61,"column":7}},"52":{"start":{"line":57,"column":34},"end":{"line":57,"column":55}},"53":{"start":{"line":58,"column":8},"end":{"line":58,"column":75}},"54":{"start":{"line":59,"column":8},"end":{"line":59,"column":107}},"55":{"start":{"line":60,"column":8},"end":{"line":60,"column":152}},"56":{"start":{"line":62,"column":4},"end":{"line":69,"column":7}},"57":{"start":{"line":63,"column":34},"end":{"line":63,"column":55}},"58":{"start":{"line":64,"column":8},"end":{"line":64,"column":75}},"59":{"start":{"line":65,"column":8},"end":{"line":68,"column":11}},"60":{"start":{"line":66,"column":12},"end":{"line":66,"column":77}},"61":{"start":{"line":67,"column":12},"end":{"line":67,"column":19}},"62":{"start":{"line":70,"column":4},"end":{"line":77,"column":7}},"63":{"start":{"line":71,"column":34},"end":{"line":71,"column":55}},"64":{"start":{"line":72,"column":8},"end":{"line":75,"column":11}},"65":{"start":{"line":73,"column":12},"end":{"line":73,"column":77}},"66":{"start":{"line":74,"column":12},"end":{"line":74,"column":19}},"67":{"start":{"line":76,"column":8},"end":{"line":76,"column":75}},"68":{"start":{"line":78,"column":4},"end":{"line":92,"column":7}},"69":{"start":{"line":79,"column":19},"end":{"line":79,"column":40}},"70":{"start":{"line":80,"column":19},"end":{"line":80,"column":40}},"71":{"start":{"line":81,"column":8},"end":{"line":84,"column":11}},"72":{"start":{"line":82,"column":12},"end":{"line":82,"column":52}},"73":{"start":{"line":83,"column":12},"end":{"line":83,"column":52}},"74":{"start":{"line":85,"column":8},"end":{"line":85,"column":45}},"75":{"start":{"line":86,"column":8},"end":{"line":86,"column":45}},"76":{"start":{"line":87,"column":8},"end":{"line":91,"column":11}},"77":{"start":{"line":88,"column":12},"end":{"line":88,"column":52}},"78":{"start":{"line":89,"column":12},"end":{"line":89,"column":52}},"79":{"start":{"line":90,"column":12},"end":{"line":90,"column":19}},"80":{"start":{"line":93,"column":4},"end":{"line":112,"column":7}},"81":{"start":{"line":94,"column":29},"end":{"line":94,"column":50}},"82":{"start":{"line":95,"column":19},"end":{"line":95,"column":40}},"83":{"start":{"line":96,"column":19},"end":{"line":96,"column":40}},"84":{"start":{"line":97,"column":24},"end":{"line":97,"column":25}},"85":{"start":{"line":98,"column":8},"end":{"line":109,"column":11}},"86":{"start":{"line":99,"column":12},"end":{"line":99,"column":24}},"87":{"start":{"line":100,"column":12},"end":{"line":108,"column":13}},"88":{"start":{"line":101,"column":16},"end":{"line":101,"column":55}},"89":{"start":{"line":103,"column":16},"end":{"line":103,"column":57}},"90":{"start":{"line":105,"column":17},"end":{"line":108,"column":13}},"91":{"start":{"line":106,"column":16},"end":{"line":106,"column":55}},"92":{"start":{"line":107,"column":16},"end":{"line":107,"column":23}},"93":{"start":{"line":111,"column":8},"end":{"line":111,"column":49}},"94":{"start":{"line":113,"column":4},"end":{"line":137,"column":7}},"95":{"start":{"line":114,"column":8},"end":{"line":117,"column":11}},"96":{"start":{"line":115,"column":34},"end":{"line":115,"column":70}},"97":{"start":{"line":116,"column":12},"end":{"line":116,"column":37}},"98":{"start":{"line":118,"column":8},"end":{"line":122,"column":11}},"99":{"start":{"line":119,"column":25},"end":{"line":119,"column":53}},"100":{"start":{"line":120,"column":37},"end":{"line":120,"column":80}},"101":{"start":{"line":121,"column":12},"end":{"line":121,"column":40}},"102":{"start":{"line":123,"column":8},"end":{"line":127,"column":11}},"103":{"start":{"line":124,"column":31},"end":{"line":124,"column":49}},"104":{"start":{"line":125,"column":43},"end":{"line":125,"column":78}},"105":{"start":{"line":126,"column":12},"end":{"line":126,"column":46}},"106":{"start":{"line":128,"column":8},"end":{"line":136,"column":11}},"107":{"start":{"line":129,"column":28},"end":{"line":133,"column":13}},"108":{"start":{"line":134,"column":36},"end":{"line":134,"column":64}},"109":{"start":{"line":135,"column":12},"end":{"line":135,"column":39}},"110":{"start":{"line":138,"column":4},"end":{"line":184,"column":7}},"111":{"start":{"line":139,"column":8},"end":{"line":143,"column":11}},"112":{"start":{"line":140,"column":12},"end":{"line":142,"column":78}},"113":{"start":{"line":141,"column":16},"end":{"line":141,"column":47}},"114":{"start":{"line":144,"column":8},"end":{"line":148,"column":11}},"115":{"start":{"line":145,"column":12},"end":{"line":147,"column":78}},"116":{"start":{"line":146,"column":16},"end":{"line":146,"column":48}},"117":{"start":{"line":149,"column":8},"end":{"line":153,"column":11}},"118":{"start":{"line":150,"column":12},"end":{"line":152,"column":15}},"119":{"start":{"line":151,"column":16},"end":{"line":151,"column":48}},"120":{"start":{"line":154,"column":8},"end":{"line":158,"column":11}},"121":{"start":{"line":155,"column":12},"end":{"line":157,"column":51}},"122":{"start":{"line":156,"column":16},"end":{"line":156,"column":53}},"123":{"start":{"line":159,"column":8},"end":{"line":163,"column":11}},"124":{"start":{"line":160,"column":12},"end":{"line":162,"column":75}},"125":{"start":{"line":161,"column":16},"end":{"line":161,"column":48}},"126":{"start":{"line":164,"column":8},"end":{"line":168,"column":11}},"127":{"start":{"line":165,"column":12},"end":{"line":167,"column":75}},"128":{"start":{"line":166,"column":16},"end":{"line":166,"column":57}},"129":{"start":{"line":169,"column":8},"end":{"line":173,"column":11}},"130":{"start":{"line":170,"column":12},"end":{"line":172,"column":48}},"131":{"start":{"line":171,"column":16},"end":{"line":171,"column":59}},"132":{"start":{"line":174,"column":8},"end":{"line":178,"column":11}},"133":{"start":{"line":175,"column":12},"end":{"line":177,"column":75}},"134":{"start":{"line":176,"column":16},"end":{"line":176,"column":36}},"135":{"start":{"line":179,"column":8},"end":{"line":183,"column":11}},"136":{"start":{"line":180,"column":12},"end":{"line":182,"column":75}},"137":{"start":{"line":181,"column":16},"end":{"line":181,"column":45}},"138":{"start":{"line":185,"column":4},"end":{"line":209,"column":7}},"139":{"start":{"line":186,"column":8},"end":{"line":197,"column":11}},"140":{"start":{"line":187,"column":34},"end":{"line":187,"column":70}},"141":{"start":{"line":188,"column":32},"end":{"line":188,"column":43}},"142":{"start":{"line":189,"column":28},"end":{"line":189,"column":33}},"143":{"start":{"line":190,"column":12},"end":{"line":193,"column":14}},"144":{"start":{"line":191,"column":16},"end":{"line":191,"column":33}},"145":{"start":{"line":192,"column":16},"end":{"line":192,"column":49}},"146":{"start":{"line":194,"column":12},"end":{"line":194,"column":52}},"147":{"start":{"line":195,"column":12},"end":{"line":195,"column":33}},"148":{"start":{"line":196,"column":12},"end":{"line":196,"column":38}},"149":{"start":{"line":198,"column":8},"end":{"line":208,"column":11}},"150":{"start":{"line":199,"column":32},"end":{"line":199,"column":43}},"151":{"start":{"line":200,"column":28},"end":{"line":200,"column":33}},"152":{"start":{"line":201,"column":12},"end":{"line":204,"column":14}},"153":{"start":{"line":202,"column":16},"end":{"line":202,"column":33}},"154":{"start":{"line":203,"column":16},"end":{"line":203,"column":49}},"155":{"start":{"line":205,"column":12},"end":{"line":205,"column":47}},"156":{"start":{"line":206,"column":12},"end":{"line":206,"column":34}},"157":{"start":{"line":207,"column":12},"end":{"line":207,"column":38}},"158":{"start":{"line":210,"column":4},"end":{"line":285,"column":7}},"159":{"start":{"line":211,"column":8},"end":{"line":226,"column":11}},"160":{"start":{"line":212,"column":24},"end":{"line":212,"column":45}},"161":{"start":{"line":213,"column":34},"end":{"line":213,"column":39}},"162":{"start":{"line":214,"column":34},"end":{"line":214,"column":39}},"163":{"start":{"line":215,"column":12},"end":{"line":219,"column":15}},"164":{"start":{"line":216,"column":16},"end":{"line":216,"column":39}},"165":{"start":{"line":217,"column":16},"end":{"line":218,"column":27}},"166":{"start":{"line":218,"column":20},"end":{"line":218,"column":27}},"167":{"start":{"line":220,"column":12},"end":{"line":224,"column":15}},"168":{"start":{"line":221,"column":16},"end":{"line":221,"column":39}},"169":{"start":{"line":222,"column":16},"end":{"line":223,"column":27}},"170":{"start":{"line":223,"column":20},"end":{"line":223,"column":27}},"171":{"start":{"line":225,"column":12},"end":{"line":225,"column":51}},"172":{"start":{"line":227,"column":8},"end":{"line":242,"column":11}},"173":{"start":{"line":228,"column":25},"end":{"line":228,"column":46}},"174":{"start":{"line":229,"column":25},"end":{"line":229,"column":46}},"175":{"start":{"line":230,"column":33},"end":{"line":230,"column":38}},"176":{"start":{"line":231,"column":12},"end":{"line":233,"column":15}},"177":{"start":{"line":232,"column":16},"end":{"line":232,"column":38}},"178":{"start":{"line":235,"column":12},"end":{"line":235,"column":53}},"179":{"start":{"line":237,"column":12},"end":{"line":237,"column":39}},"180":{"start":{"line":239,"column":12},"end":{"line":239,"column":53}},"181":{"start":{"line":241,"column":12},"end":{"line":241,"column":38}},"182":{"start":{"line":243,"column":8},"end":{"line":259,"column":11}},"183":{"start":{"line":244,"column":24},"end":{"line":244,"column":45}},"184":{"start":{"line":245,"column":28},"end":{"line":245,"column":29}},"185":{"start":{"line":246,"column":12},"end":{"line":257,"column":15}},"186":{"start":{"line":247,"column":16},"end":{"line":247,"column":28}},"187":{"start":{"line":248,"column":16},"end":{"line":256,"column":17}},"188":{"start":{"line":250,"column":20},"end":{"line":250,"column":59}},"189":{"start":{"line":252,"column":20},"end":{"line":255,"column":27}},"190":{"start":{"line":253,"column":24},"end":{"line":253,"column":51}},"191":{"start":{"line":254,"column":24},"end":{"line":254,"column":31}},"192":{"start":{"line":258,"column":12},"end":{"line":258,"column":51}},"193":{"start":{"line":260,"column":8},"end":{"line":270,"column":11}},"194":{"start":{"line":261,"column":25},"end":{"line":261,"column":46}},"195":{"start":{"line":262,"column":25},"end":{"line":262,"column":46}},"196":{"start":{"line":263,"column":12},"end":{"line":267,"column":15}},"197":{"start":{"line":264,"column":16},"end":{"line":264,"column":58}},"198":{"start":{"line":265,"column":16},"end":{"line":265,"column":58}},"199":{"start":{"line":266,"column":16},"end":{"line":266,"column":23}},"200":{"start":{"line":268,"column":12},"end":{"line":268,"column":53}},"201":{"start":{"line":269,"column":12},"end":{"line":269,"column":53}},"202":{"start":{"line":271,"column":8},"end":{"line":284,"column":11}},"203":{"start":{"line":272,"column":33},"end":{"line":272,"column":54}},"204":{"start":{"line":273,"column":24},"end":{"line":273,"column":45}},"205":{"start":{"line":274,"column":33},"end":{"line":274,"column":38}},"206":{"start":{"line":275,"column":30},"end":{"line":277,"column":13}},"207":{"start":{"line":276,"column":16},"end":{"line":276,"column":38}},"208":{"start":{"line":278,"column":12},"end":{"line":278,"column":46}},"209":{"start":{"line":280,"column":12},"end":{"line":280,"column":62}},"210":{"start":{"line":281,"column":12},"end":{"line":281,"column":55}},"211":{"start":{"line":283,"column":12},"end":{"line":283,"column":39}},"212":{"start":{"line":286,"column":4},"end":{"line":313,"column":7}},"213":{"start":{"line":287,"column":8},"end":{"line":297,"column":11}},"214":{"start":{"line":289,"column":37},"end":{"line":289,"column":58}},"215":{"start":{"line":291,"column":12},"end":{"line":291,"column":56}},"216":{"start":{"line":292,"column":12},"end":{"line":292,"column":77}},"217":{"start":{"line":294,"column":12},"end":{"line":296,"column":51}},"218":{"start":{"line":295,"column":16},"end":{"line":295,"column":70}},"219":{"start":{"line":298,"column":8},"end":{"line":306,"column":11}},"220":{"start":{"line":299,"column":31},"end":{"line":303,"column":13}},"221":{"start":{"line":302,"column":28},"end":{"line":302,"column":35}},"222":{"start":{"line":304,"column":12},"end":{"line":304,"column":53}},"223":{"start":{"line":305,"column":12},"end":{"line":305,"column":78}},"224":{"start":{"line":307,"column":8},"end":{"line":312,"column":11}},"225":{"start":{"line":308,"column":29},"end":{"line":308,"column":45}},"226":{"start":{"line":309,"column":12},"end":{"line":309,"column":37}},"227":{"start":{"line":310,"column":12},"end":{"line":310,"column":52}},"228":{"start":{"line":311,"column":12},"end":{"line":311,"column":73}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":51},"end":{"line":18,"column":52}},"loc":{"start":{"line":18,"column":63},"end":{"line":34,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":19,"column":18},"end":{"line":19,"column":19}},"loc":{"start":{"line":19,"column":30},"end":{"line":26,"column":5}},"line":19},"7":{"name":"(anonymous_7)","decl":{"start":{"line":20,"column":48},"end":{"line":20,"column":49}},"loc":{"start":{"line":20,"column":61},"end":{"line":24,"column":9}},"line":20},"8":{"name":"(anonymous_8)","decl":{"start":{"line":27,"column":11},"end":{"line":27,"column":12}},"loc":{"start":{"line":27,"column":26},"end":{"line":33,"column":5}},"line":27},"9":{"name":"(anonymous_9)","decl":{"start":{"line":35,"column":56},"end":{"line":35,"column":57}},"loc":{"start":{"line":35,"column":71},"end":{"line":37,"column":1}},"line":35},"10":{"name":"(anonymous_10)","decl":{"start":{"line":42,"column":32},"end":{"line":42,"column":33}},"loc":{"start":{"line":42,"column":38},"end":{"line":314,"column":1}},"line":42},"11":{"name":"(anonymous_11)","decl":{"start":{"line":44,"column":11},"end":{"line":44,"column":12}},"loc":{"start":{"line":44,"column":17},"end":{"line":46,"column":5}},"line":44},"12":{"name":"(anonymous_12)","decl":{"start":{"line":47,"column":26},"end":{"line":47,"column":27}},"loc":{"start":{"line":47,"column":32},"end":{"line":47,"column":70}},"line":47},"13":{"name":"(anonymous_13)","decl":{"start":{"line":48,"column":32},"end":{"line":48,"column":33}},"loc":{"start":{"line":48,"column":39},"end":{"line":51,"column":5}},"line":48},"14":{"name":"(anonymous_14)","decl":{"start":{"line":52,"column":48},"end":{"line":52,"column":49}},"loc":{"start":{"line":52,"column":54},"end":{"line":55,"column":5}},"line":52},"15":{"name":"(anonymous_15)","decl":{"start":{"line":56,"column":49},"end":{"line":56,"column":50}},"loc":{"start":{"line":56,"column":55},"end":{"line":61,"column":5}},"line":56},"16":{"name":"(anonymous_16)","decl":{"start":{"line":62,"column":60},"end":{"line":62,"column":61}},"loc":{"start":{"line":62,"column":70},"end":{"line":69,"column":5}},"line":62},"17":{"name":"(anonymous_17)","decl":{"start":{"line":65,"column":51},"end":{"line":65,"column":52}},"loc":{"start":{"line":65,"column":82},"end":{"line":68,"column":9}},"line":65},"18":{"name":"(anonymous_18)","decl":{"start":{"line":70,"column":94},"end":{"line":70,"column":95}},"loc":{"start":{"line":70,"column":104},"end":{"line":77,"column":5}},"line":70},"19":{"name":"(anonymous_19)","decl":{"start":{"line":72,"column":51},"end":{"line":72,"column":52}},"loc":{"start":{"line":72,"column":82},"end":{"line":75,"column":9}},"line":72},"20":{"name":"(anonymous_20)","decl":{"start":{"line":78,"column":59},"end":{"line":78,"column":60}},"loc":{"start":{"line":78,"column":69},"end":{"line":92,"column":5}},"line":78},"21":{"name":"(anonymous_21)","decl":{"start":{"line":81,"column":45},"end":{"line":81,"column":46}},"loc":{"start":{"line":81,"column":83},"end":{"line":84,"column":9}},"line":81},"22":{"name":"(anonymous_22)","decl":{"start":{"line":87,"column":45},"end":{"line":87,"column":46}},"loc":{"start":{"line":87,"column":83},"end":{"line":91,"column":9}},"line":87},"23":{"name":"(anonymous_23)","decl":{"start":{"line":93,"column":72},"end":{"line":93,"column":73}},"loc":{"start":{"line":93,"column":82},"end":{"line":112,"column":5}},"line":93},"24":{"name":"(anonymous_24)","decl":{"start":{"line":98,"column":40},"end":{"line":98,"column":41}},"loc":{"start":{"line":98,"column":60},"end":{"line":109,"column":9}},"line":98},"25":{"name":"(anonymous_25)","decl":{"start":{"line":113,"column":36},"end":{"line":113,"column":37}},"loc":{"start":{"line":113,"column":42},"end":{"line":137,"column":5}},"line":113},"26":{"name":"(anonymous_26)","decl":{"start":{"line":114,"column":51},"end":{"line":114,"column":52}},"loc":{"start":{"line":114,"column":57},"end":{"line":117,"column":9}},"line":114},"27":{"name":"(anonymous_27)","decl":{"start":{"line":118,"column":63},"end":{"line":118,"column":64}},"loc":{"start":{"line":118,"column":69},"end":{"line":122,"column":9}},"line":118},"28":{"name":"(anonymous_28)","decl":{"start":{"line":123,"column":61},"end":{"line":123,"column":62}},"loc":{"start":{"line":123,"column":67},"end":{"line":127,"column":9}},"line":123},"29":{"name":"(anonymous_29)","decl":{"start":{"line":128,"column":49},"end":{"line":128,"column":50}},"loc":{"start":{"line":128,"column":55},"end":{"line":136,"column":9}},"line":128},"30":{"name":"(anonymous_30)","decl":{"start":{"line":138,"column":31},"end":{"line":138,"column":32}},"loc":{"start":{"line":138,"column":37},"end":{"line":184,"column":5}},"line":138},"31":{"name":"(anonymous_31)","decl":{"start":{"line":139,"column":58},"end":{"line":139,"column":59}},"loc":{"start":{"line":139,"column":64},"end":{"line":143,"column":9}},"line":139},"32":{"name":"(anonymous_32)","decl":{"start":{"line":140,"column":26},"end":{"line":140,"column":27}},"loc":{"start":{"line":140,"column":32},"end":{"line":142,"column":13}},"line":140},"33":{"name":"(anonymous_33)","decl":{"start":{"line":144,"column":63},"end":{"line":144,"column":64}},"loc":{"start":{"line":144,"column":69},"end":{"line":148,"column":9}},"line":144},"34":{"name":"(anonymous_34)","decl":{"start":{"line":145,"column":26},"end":{"line":145,"column":27}},"loc":{"start":{"line":145,"column":32},"end":{"line":147,"column":13}},"line":145},"35":{"name":"(anonymous_35)","decl":{"start":{"line":149,"column":49},"end":{"line":149,"column":50}},"loc":{"start":{"line":149,"column":55},"end":{"line":153,"column":9}},"line":149},"36":{"name":"(anonymous_36)","decl":{"start":{"line":150,"column":32},"end":{"line":150,"column":33}},"loc":{"start":{"line":150,"column":38},"end":{"line":152,"column":13}},"line":150},"37":{"name":"(anonymous_37)","decl":{"start":{"line":154,"column":64},"end":{"line":154,"column":65}},"loc":{"start":{"line":154,"column":70},"end":{"line":158,"column":9}},"line":154},"38":{"name":"(anonymous_38)","decl":{"start":{"line":155,"column":26},"end":{"line":155,"column":27}},"loc":{"start":{"line":155,"column":32},"end":{"line":157,"column":13}},"line":155},"39":{"name":"(anonymous_39)","decl":{"start":{"line":159,"column":73},"end":{"line":159,"column":74}},"loc":{"start":{"line":159,"column":79},"end":{"line":163,"column":9}},"line":159},"40":{"name":"(anonymous_40)","decl":{"start":{"line":160,"column":26},"end":{"line":160,"column":27}},"loc":{"start":{"line":160,"column":32},"end":{"line":162,"column":13}},"line":160},"41":{"name":"(anonymous_41)","decl":{"start":{"line":161,"column":37},"end":{"line":161,"column":38}},"loc":{"start":{"line":161,"column":43},"end":{"line":161,"column":46}},"line":161},"42":{"name":"(anonymous_42)","decl":{"start":{"line":164,"column":71},"end":{"line":164,"column":72}},"loc":{"start":{"line":164,"column":77},"end":{"line":168,"column":9}},"line":164},"43":{"name":"(anonymous_43)","decl":{"start":{"line":165,"column":26},"end":{"line":165,"column":27}},"loc":{"start":{"line":165,"column":32},"end":{"line":167,"column":13}},"line":165},"44":{"name":"(anonymous_44)","decl":{"start":{"line":166,"column":46},"end":{"line":166,"column":47}},"loc":{"start":{"line":166,"column":52},"end":{"line":166,"column":55}},"line":166},"45":{"name":"(anonymous_45)","decl":{"start":{"line":169,"column":59},"end":{"line":169,"column":60}},"loc":{"start":{"line":169,"column":65},"end":{"line":173,"column":9}},"line":169},"46":{"name":"(anonymous_46)","decl":{"start":{"line":170,"column":26},"end":{"line":170,"column":27}},"loc":{"start":{"line":170,"column":32},"end":{"line":172,"column":13}},"line":170},"47":{"name":"(anonymous_47)","decl":{"start":{"line":174,"column":72},"end":{"line":174,"column":73}},"loc":{"start":{"line":174,"column":78},"end":{"line":178,"column":9}},"line":174},"48":{"name":"(anonymous_48)","decl":{"start":{"line":175,"column":26},"end":{"line":175,"column":27}},"loc":{"start":{"line":175,"column":32},"end":{"line":177,"column":13}},"line":175},"49":{"name":"(anonymous_49)","decl":{"start":{"line":179,"column":70},"end":{"line":179,"column":71}},"loc":{"start":{"line":179,"column":76},"end":{"line":183,"column":9}},"line":179},"50":{"name":"(anonymous_50)","decl":{"start":{"line":180,"column":26},"end":{"line":180,"column":27}},"loc":{"start":{"line":180,"column":32},"end":{"line":182,"column":13}},"line":180},"51":{"name":"(anonymous_51)","decl":{"start":{"line":185,"column":36},"end":{"line":185,"column":37}},"loc":{"start":{"line":185,"column":42},"end":{"line":209,"column":5}},"line":185},"52":{"name":"(anonymous_52)","decl":{"start":{"line":186,"column":62},"end":{"line":186,"column":63}},"loc":{"start":{"line":186,"column":68},"end":{"line":197,"column":9}},"line":186},"53":{"name":"(anonymous_53)","decl":{"start":{"line":190,"column":26},"end":{"line":190,"column":27}},"loc":{"start":{"line":190,"column":39},"end":{"line":193,"column":13}},"line":190},"54":{"name":"(anonymous_54)","decl":{"start":{"line":198,"column":67},"end":{"line":198,"column":68}},"loc":{"start":{"line":198,"column":73},"end":{"line":208,"column":9}},"line":198},"55":{"name":"(anonymous_55)","decl":{"start":{"line":201,"column":26},"end":{"line":201,"column":27}},"loc":{"start":{"line":201,"column":39},"end":{"line":204,"column":13}},"line":201},"56":{"name":"(anonymous_56)","decl":{"start":{"line":210,"column":34},"end":{"line":210,"column":35}},"loc":{"start":{"line":210,"column":40},"end":{"line":285,"column":5}},"line":210},"57":{"name":"(anonymous_57)","decl":{"start":{"line":211,"column":67},"end":{"line":211,"column":68}},"loc":{"start":{"line":211,"column":77},"end":{"line":226,"column":9}},"line":211},"58":{"name":"(anonymous_58)","decl":{"start":{"line":215,"column":41},"end":{"line":215,"column":42}},"loc":{"start":{"line":215,"column":47},"end":{"line":219,"column":13}},"line":215},"59":{"name":"(anonymous_59)","decl":{"start":{"line":220,"column":41},"end":{"line":220,"column":42}},"loc":{"start":{"line":220,"column":47},"end":{"line":224,"column":13}},"line":220},"60":{"name":"(anonymous_60)","decl":{"start":{"line":227,"column":63},"end":{"line":227,"column":64}},"loc":{"start":{"line":227,"column":69},"end":{"line":242,"column":9}},"line":227},"61":{"name":"(anonymous_61)","decl":{"start":{"line":231,"column":53},"end":{"line":231,"column":54}},"loc":{"start":{"line":231,"column":59},"end":{"line":233,"column":13}},"line":231},"62":{"name":"(anonymous_62)","decl":{"start":{"line":243,"column":80},"end":{"line":243,"column":81}},"loc":{"start":{"line":243,"column":90},"end":{"line":259,"column":9}},"line":243},"63":{"name":"(anonymous_63)","decl":{"start":{"line":246,"column":41},"end":{"line":246,"column":42}},"loc":{"start":{"line":246,"column":47},"end":{"line":257,"column":13}},"line":246},"64":{"name":"(anonymous_64)","decl":{"start":{"line":252,"column":31},"end":{"line":252,"column":32}},"loc":{"start":{"line":252,"column":37},"end":{"line":255,"column":21}},"line":252},"65":{"name":"(anonymous_65)","decl":{"start":{"line":260,"column":55},"end":{"line":260,"column":56}},"loc":{"start":{"line":260,"column":65},"end":{"line":270,"column":9}},"line":260},"66":{"name":"(anonymous_66)","decl":{"start":{"line":263,"column":53},"end":{"line":263,"column":54}},"loc":{"start":{"line":263,"column":65},"end":{"line":267,"column":13}},"line":263},"67":{"name":"(anonymous_67)","decl":{"start":{"line":271,"column":64},"end":{"line":271,"column":65}},"loc":{"start":{"line":271,"column":70},"end":{"line":284,"column":9}},"line":271},"68":{"name":"(anonymous_68)","decl":{"start":{"line":275,"column":30},"end":{"line":275,"column":31}},"loc":{"start":{"line":275,"column":36},"end":{"line":277,"column":13}},"line":275},"69":{"name":"(anonymous_69)","decl":{"start":{"line":286,"column":27},"end":{"line":286,"column":28}},"loc":{"start":{"line":286,"column":33},"end":{"line":313,"column":5}},"line":286},"70":{"name":"(anonymous_70)","decl":{"start":{"line":287,"column":70},"end":{"line":287,"column":71}},"loc":{"start":{"line":287,"column":76},"end":{"line":297,"column":9}},"line":287},"71":{"name":"(anonymous_71)","decl":{"start":{"line":294,"column":26},"end":{"line":294,"column":27}},"loc":{"start":{"line":294,"column":32},"end":{"line":296,"column":13}},"line":294},"72":{"name":"(anonymous_72)","decl":{"start":{"line":298,"column":60},"end":{"line":298,"column":61}},"loc":{"start":{"line":298,"column":66},"end":{"line":306,"column":9}},"line":298},"73":{"name":"(anonymous_73)","decl":{"start":{"line":302,"column":22},"end":{"line":302,"column":23}},"loc":{"start":{"line":302,"column":28},"end":{"line":302,"column":35}},"line":302},"74":{"name":"(anonymous_74)","decl":{"start":{"line":307,"column":64},"end":{"line":307,"column":65}},"loc":{"start":{"line":307,"column":70},"end":{"line":312,"column":9}},"line":307}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":34,"column":4}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":34,"column":4}}],"line":18},"11":{"loc":{"start":{"line":20,"column":18},"end":{"line":24,"column":9}},"type":"binary-expr","locations":[{"start":{"line":20,"column":18},"end":{"line":20,"column":44}},{"start":{"line":20,"column":48},"end":{"line":24,"column":9}}],"line":20},"12":{"loc":{"start":{"line":22,"column":29},"end":{"line":22,"column":95}},"type":"if","locations":[{"start":{"line":22,"column":29},"end":{"line":22,"column":95}},{"start":{"line":22,"column":29},"end":{"line":22,"column":95}}],"line":22},"13":{"loc":{"start":{"line":28,"column":8},"end":{"line":28,"column":46}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":46}},{"start":{"line":28,"column":8},"end":{"line":28,"column":46}}],"line":28},"14":{"loc":{"start":{"line":28,"column":12},"end":{"line":28,"column":33}},"type":"binary-expr","locations":[{"start":{"line":28,"column":12},"end":{"line":28,"column":15}},{"start":{"line":28,"column":19},"end":{"line":28,"column":33}}],"line":28},"15":{"loc":{"start":{"line":30,"column":8},"end":{"line":30,"column":137}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":30,"column":137}},{"start":{"line":30,"column":8},"end":{"line":30,"column":137}}],"line":30},"16":{"loc":{"start":{"line":30,"column":78},"end":{"line":30,"column":137}},"type":"if","locations":[{"start":{"line":30,"column":78},"end":{"line":30,"column":137}},{"start":{"line":30,"column":78},"end":{"line":30,"column":137}}],"line":30},"17":{"loc":{"start":{"line":35,"column":22},"end":{"line":37,"column":1}},"type":"binary-expr","locations":[{"start":{"line":35,"column":23},"end":{"line":35,"column":27}},{"start":{"line":35,"column":31},"end":{"line":35,"column":51}},{"start":{"line":35,"column":56},"end":{"line":37,"column":1}}],"line":35},"18":{"loc":{"start":{"line":36,"column":11},"end":{"line":36,"column":61}},"type":"cond-expr","locations":[{"start":{"line":36,"column":37},"end":{"line":36,"column":40}},{"start":{"line":36,"column":43},"end":{"line":36,"column":61}}],"line":36},"19":{"loc":{"start":{"line":36,"column":12},"end":{"line":36,"column":33}},"type":"binary-expr","locations":[{"start":{"line":36,"column":12},"end":{"line":36,"column":15}},{"start":{"line":36,"column":19},"end":{"line":36,"column":33}}],"line":36},"20":{"loc":{"start":{"line":60,"column":19},"end":{"line":60,"column":71}},"type":"binary-expr","locations":[{"start":{"line":60,"column":19},"end":{"line":60,"column":65}},{"start":{"line":60,"column":69},"end":{"line":60,"column":71}}],"line":60},"21":{"loc":{"start":{"line":100,"column":12},"end":{"line":108,"column":13}},"type":"if","locations":[{"start":{"line":100,"column":12},"end":{"line":108,"column":13}},{"start":{"line":100,"column":12},"end":{"line":108,"column":13}}],"line":100},"22":{"loc":{"start":{"line":105,"column":17},"end":{"line":108,"column":13}},"type":"if","locations":[{"start":{"line":105,"column":17},"end":{"line":108,"column":13}},{"start":{"line":105,"column":17},"end":{"line":108,"column":13}}],"line":105},"23":{"loc":{"start":{"line":217,"column":16},"end":{"line":218,"column":27}},"type":"if","locations":[{"start":{"line":217,"column":16},"end":{"line":218,"column":27}},{"start":{"line":217,"column":16},"end":{"line":218,"column":27}}],"line":217},"24":{"loc":{"start":{"line":222,"column":16},"end":{"line":223,"column":27}},"type":"if","locations":[{"start":{"line":222,"column":16},"end":{"line":223,"column":27}},{"start":{"line":222,"column":16},"end":{"line":223,"column":27}}],"line":222},"25":{"loc":{"start":{"line":248,"column":16},"end":{"line":256,"column":17}},"type":"if","locations":[{"start":{"line":248,"column":16},"end":{"line":256,"column":17}},{"start":{"line":248,"column":16},"end":{"line":256,"column":17}}],"line":248}},"s":{"0":1,"1":93,"2":93,"3":93,"4":93,"5":92,"6":64,"7":93,"8":0,"9":0,"10":0,"11":1,"12":2,"13":0,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":1,"24":2,"25":0,"26":2,"27":2,"28":2,"29":2,"30":2,"31":93,"32":93,"33":2,"34":2,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":28,"46":1,"47":14,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":2,"87":2,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":2,"145":2,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":0,"154":0,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":0,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1,"200":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":1,"207":0,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1,"214":1,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1,"221":0,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1},"f":{"0":93,"1":64,"2":0,"3":2,"4":0,"5":1,"6":1,"7":0,"8":2,"9":1,"10":1,"11":1,"12":28,"13":14,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":2,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":0,"42":1,"43":1,"44":0,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":2,"54":1,"55":0,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":0,"69":1,"70":1,"71":1,"72":1,"73":0,"74":1},"b":{"0":[1,1,1],"1":[1,0],"2":[93,0],"3":[92,1],"4":[93,93],"5":[7,86],"6":[86,3],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[1,0],"12":[0,0],"13":[0,2],"14":[2,2],"15":[2,0],"16":[93,0],"17":[1,1,1],"18":[1,0],"19":[1,1],"20":[1,0],"21":[1,1],"22":[1,0],"23":[0,1],"24":[1,0],"25":[1,0]},"inputSourceMap":{"version":3,"file":"/Users/ark/GitHub/node-dependency-injection/tst/test-index.ts","sources":["/Users/ark/GitHub/node-dependency-injection/tst/test-index.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Assert from 'assert';\nimport * as Crypto from 'crypto';\nimport DependencyInjector from '../src/index';\n\ndescribe('DependencyInjection', () => {\n  let injector: DependencyInjector;\n\n  before(() => {\n    injector = new DependencyInjector({ debug: false });\n  });\n\n  const getRandomBits = (): string => Crypto.randomBytes(16).toString('hex');\n  const getRandomDependency = (): { name: string; value: string } => ({\n    name: getRandomBits(),\n    value: getRandomBits()\n  });\n\n  it('should initialize without any options', () => {\n    const local_injector = new DependencyInjector();\n    Assert.ok(local_injector);\n  });\n\n  it('should register dependencies correctly', () => {\n    const random_dependency = getRandomDependency();\n    injector.register(random_dependency.name, random_dependency.value);\n\n    Assert.ok(injector['dependencies'][random_dependency.name], 'Injector should register dependency');\n    Assert.ok(\n      (injector['dependants'][random_dependency.name] || []).length >= 0,\n      'Injector should initialize empty resolvers list for dependency'\n    );\n  });\n\n  it('should invoke resolver for dependencies correctly', (done) => {\n    const random_dependency = getRandomDependency();\n    injector.register(random_dependency.name, random_dependency.value);\n\n    injector.resolve([random_dependency.name], (resolved_dependency_value: any) => {\n      Assert.equal(resolved_dependency_value, random_dependency.value);\n      done();\n    });\n  });\n\n  it('should invokes resolvers lazily if dependencies are not registered before resolvers', (done) => {\n    const random_dependency = getRandomDependency();\n\n    injector.resolve([random_dependency.name], (resolved_dependency_value: any) => {\n      Assert.equal(resolved_dependency_value, random_dependency.value);\n      done();\n    });\n\n    injector.register(random_dependency.name, random_dependency.value);\n  });\n\n  it('should invoke resolver for multiple dependencies', (done) => {\n    const d1 = getRandomDependency();\n    const d2 = getRandomDependency();\n\n    injector.resolve([d1.name, d2.name], (resolved_value1: any, resolved_value2: any) => {\n      Assert.equal(resolved_value1, d1.value);\n      Assert.equal(resolved_value2, d2.value);\n    });\n\n    injector.register(d1.name, d1.value);\n    injector.register(d2.name, d2.value);\n\n    injector.resolve([d1.name, d2.name], (resolved_value1: any, resolved_value2: any) => {\n      Assert.equal(resolved_value1, d1.value);\n      Assert.equal(resolved_value2, d2.value);\n      done();\n    });\n  });\n\n  it('should invoke resolver if dependency registered changes value', (done) => {\n    const testInjector = new DependencyInjector();\n    const d1 = getRandomDependency();\n    const d2 = getRandomDependency();\n    let callCount = 0;\n\n    testInjector.resolve([d1.name], (resolved_value: any) => {\n      callCount++;\n      if (callCount === 1) {\n        Assert.equal(resolved_value, d1.value);\n        // Register different value to trigger second call\n        testInjector.register(d1.name, d2.value);\n      } else if (callCount === 2) {\n        Assert.equal(resolved_value, d2.value);\n        done();\n      }\n    });\n\n    // Inject a value first key (d1.name)\n    testInjector.register(d1.name, d1.value);\n  });\n\n  describe('Constructor options', () => {\n    it('should initialize with debug enabled', () => {\n      const debugInjector = new DependencyInjector({ debug: true });\n      Assert.ok(debugInjector);\n    });\n\n    it('should initialize with pre-existing dependencies', () => {\n      const deps = { 'test-dep': 'test-value' };\n      const injectorWithDeps = new DependencyInjector({ dependencies: deps });\n      Assert.ok(injectorWithDeps);\n    });\n\n    it('should initialize with pre-existing dependants', () => {\n      const dependants = { 'test-dep': [] };\n      const injectorWithDependants = new DependencyInjector({ dependants });\n      Assert.ok(injectorWithDependants);\n    });\n\n    it('should initialize with all options', () => {\n      const options = {\n        debug: true,\n        dependencies: { 'test-dep': 'test-value' },\n        dependants: { 'test-dep': [] }\n      };\n      const injectorWithAll = new DependencyInjector(options);\n      Assert.ok(injectorWithAll);\n    });\n  });\n\n  describe('Error handling', () => {\n    it('should throw error for empty dependency key', () => {\n      Assert.throws(() => {\n        injector.register('', 'value');\n      }, /Dependency name\\/key has to be passed as a non-empty string/);\n    });\n\n    it('should throw error for non-string dependency key', () => {\n      Assert.throws(() => {\n        injector.register(123 as any, 'value');\n      }, /Dependency name\\/key has to be passed as a non-empty string/);\n    });\n\n    it('should allow null dependency value', () => {\n      Assert.doesNotThrow(() => {\n        injector.register('test', null);\n      });\n    });\n\n    it('should throw error for undefined dependency value', () => {\n      Assert.throws(() => {\n        injector.register('test', undefined);\n      }, /Dependency \\(value\\) is required/);\n    });\n\n    it('should throw error for empty dependencies array in resolve', () => {\n      Assert.throws(() => {\n        injector.resolve([], () => {});\n      }, /Dependencies have to be a non-empty list of dependencies/);\n    });\n\n    it('should throw error for non-array dependencies in resolve', () => {\n      Assert.throws(() => {\n        injector.resolve('not-array' as any, () => {});\n      }, /Dependencies have to be a non-empty list of dependencies/);\n    });\n\n    it('should throw error for non-function resolver', () => {\n      Assert.throws(() => {\n        injector.resolve(['test'], 'not-function' as any);\n      }, /Resolver has to be a function/);\n    });\n\n    it('should throw error for empty dependencies array in inject', () => {\n      Assert.throws(() => {\n        injector.inject([]);\n      }, /Dependencies have to be a non-empty list of dependencies/);\n    });\n\n    it('should throw error for non-array dependencies in inject', () => {\n      Assert.throws(() => {\n        injector.inject('not-array' as any);\n      }, /Dependencies have to be a non-empty list of dependencies/);\n    });\n  });\n\n  describe('Debug functionality', () => {\n    it('should log debug messages when debug is enabled', () => {\n      const debugInjector = new DependencyInjector({ debug: true });\n      const originalLog = console.log;\n      let logCalled = false;\n      \n      console.log = (...args: any[]) => {\n        logCalled = true;\n        originalLog.apply(console, args);\n      };\n      \n      debugInjector.register('test', 'value');\n      Assert.ok(logCalled);\n      \n      console.log = originalLog;\n    });\n\n    it('should not log debug messages when debug is disabled', () => {\n      const originalLog = console.log;\n      let logCalled = false;\n      \n      console.log = (...args: any[]) => {\n        logCalled = true;\n        originalLog.apply(console, args);\n      };\n      \n      injector.register('test', 'value');\n      Assert.ok(!logCalled);\n      \n      console.log = originalLog;\n    });\n  });\n\n  describe('Complex scenarios', () => {\n    it('should handle multiple resolvers for same dependency', (done) => {\n      const dep = getRandomDependency();\n      let resolver1Called = false;\n      let resolver2Called = false;\n\n      injector.resolve([dep.name], () => {\n        resolver1Called = true;\n        if (resolver2Called) done();\n      });\n\n      injector.resolve([dep.name], () => {\n        resolver2Called = true;\n        if (resolver1Called) done();\n      });\n\n      injector.register(dep.name, dep.value);\n    });\n\n    it('should handle resolver with missing dependencies', () => {\n      const dep1 = getRandomDependency();\n      const dep2 = getRandomDependency();\n      let resolverCalled = false;\n\n      injector.resolve([dep1.name, dep2.name], () => {\n        resolverCalled = true;\n      });\n\n      // Only register one dependency\n      injector.register(dep1.name, dep1.value);\n\n      // Resolver should not be called yet\n      Assert.ok(!resolverCalled);\n\n      // Register second dependency\n      injector.register(dep2.name, dep2.value);\n\n      // Now resolver should be called\n      Assert.ok(resolverCalled);\n    });\n\n    it('should handle same dependency value not triggering resolver again', (done) => {\n      const dep = getRandomDependency();\n      let callCount = 0;\n\n      injector.resolve([dep.name], () => {\n        callCount++;\n        if (callCount === 1) {\n          // Register same value again\n          injector.register(dep.name, dep.value);\n          // Should not trigger resolver again\n          setTimeout(() => {\n            Assert.equal(callCount, 1);\n            done();\n          }, 10);\n        }\n      });\n\n      injector.register(dep.name, dep.value);\n    });\n\n    it('should handle resolver context correctly', (done) => {\n      const dep1 = getRandomDependency();\n      const dep2 = getRandomDependency();\n\n      injector.resolve([dep1.name, dep2.name], function(this: any) {\n        Assert.equal(this[dep1.name], dep1.value);\n        Assert.equal(this[dep2.name], dep2.value);\n        done();\n      });\n\n      injector.register(dep1.name, dep1.value);\n      injector.register(dep2.name, dep2.value);\n    });\n\n    it('should handle resolver with no dependencies array', () => {\n      const testInjector = new DependencyInjector();\n      const dep = getRandomDependency();\n      let resolverCalled = false;\n\n      const resolver = (() => {\n        resolverCalled = true;\n      }) as any;\n      resolver.dependencies = undefined;\n\n      // Manually add resolver to dependants to test edge case\n      testInjector['dependants'][dep.name] = [resolver];\n      testInjector.register(dep.name, dep.value);\n\n      // Should not call resolver if dependencies is undefined\n      Assert.ok(!resolverCalled);\n    });\n\n  });\n\n  describe('Edge cases', () => {\n    it('should handle null and undefined values in dependencies', () => {\n      // Create a new injector that allows null/undefined values\n      const edgeCaseInjector = new DependencyInjector();\n      \n      // Test with null (should work as it's a valid value)\n      edgeCaseInjector.register('null-dep', null);\n      Assert.equal(edgeCaseInjector['dependencies']['null-dep'], null);\n      \n      // Test with undefined (should throw error)\n      Assert.throws(() => {\n        edgeCaseInjector.register('undefined-dep', undefined);\n      }, /Dependency \\(value\\) is required/);\n    });\n\n    it('should handle complex objects as dependencies', () => {\n      const complexObj = {\n        nested: { value: 'test' },\n        array: [1, 2, 3],\n        func: () => 'hello'\n      };\n      \n      injector.register('complex', complexObj);\n      Assert.deepEqual(injector['dependencies']['complex'], complexObj);\n    });\n\n    it('should handle circular references in dependencies', () => {\n      const circular: any = { name: 'test' };\n      circular.self = circular;\n      \n      injector.register('circular', circular);\n      Assert.equal(injector['dependencies']['circular'], circular);\n    });\n  });\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6e98537e6d7aa1f15255445c1cff73bd90a0f04e","contentHash":"2a00d3733bcf12825270ba6970dfcbc8bdb662f4f0bd04c58d6bec3291a39264"},"/Users/ark/GitHub/node-dependency-injection/src/index.ts":{"path":"/Users/ark/GitHub/node-dependency-injection/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":34,"column":4}},"15":{"start":{"line":19,"column":18},"end":{"line":26,"column":5}},"16":{"start":{"line":20,"column":8},"end":{"line":24,"column":10}},"17":{"start":{"line":21,"column":21},"end":{"line":21,"column":23}},"18":{"start":{"line":22,"column":12},"end":{"line":22,"column":95}},"19":{"start":{"line":22,"column":29},"end":{"line":22,"column":95}},"20":{"start":{"line":22,"column":77},"end":{"line":22,"column":95}},"21":{"start":{"line":23,"column":12},"end":{"line":23,"column":22}},"22":{"start":{"line":25,"column":8},"end":{"line":25,"column":26}},"23":{"start":{"line":27,"column":4},"end":{"line":33,"column":6}},"24":{"start":{"line":28,"column":8},"end":{"line":28,"column":46}},"25":{"start":{"line":28,"column":35},"end":{"line":28,"column":46}},"26":{"start":{"line":29,"column":21},"end":{"line":29,"column":23}},"27":{"start":{"line":30,"column":8},"end":{"line":30,"column":137}},"28":{"start":{"line":30,"column":25},"end":{"line":30,"column":137}},"29":{"start":{"line":30,"column":38},"end":{"line":30,"column":50}},"30":{"start":{"line":30,"column":56},"end":{"line":30,"column":57}},"31":{"start":{"line":30,"column":78},"end":{"line":30,"column":137}},"32":{"start":{"line":30,"column":102},"end":{"line":30,"column":137}},"33":{"start":{"line":31,"column":8},"end":{"line":31,"column":40}},"34":{"start":{"line":32,"column":8},"end":{"line":32,"column":22}},"35":{"start":{"line":35,"column":0},"end":{"line":35,"column":62}},"36":{"start":{"line":36,"column":0},"end":{"line":36,"column":37}},"37":{"start":{"line":37,"column":10},"end":{"line":37,"column":41}},"38":{"start":{"line":38,"column":15},"end":{"line":38,"column":46}},"39":{"start":{"line":57,"column":52},"end":{"line":57,"column":59}},"40":{"start":{"line":58,"column":8},"end":{"line":58,"column":36}},"41":{"start":{"line":59,"column":8},"end":{"line":59,"column":47}},"42":{"start":{"line":60,"column":8},"end":{"line":60,"column":43}},"43":{"start":{"line":67,"column":8},"end":{"line":67,"column":53}},"44":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"45":{"start":{"line":69,"column":12},"end":{"line":69,"column":45}},"46":{"start":{"line":79,"column":8},"end":{"line":79,"column":40}},"47":{"start":{"line":80,"column":8},"end":{"line":80,"column":145}},"48":{"start":{"line":81,"column":8},"end":{"line":81,"column":84}},"49":{"start":{"line":83,"column":37},"end":{"line":83,"column":70}},"50":{"start":{"line":84,"column":26},"end":{"line":84,"column":63}},"51":{"start":{"line":85,"column":8},"end":{"line":91,"column":9}},"52":{"start":{"line":86,"column":12},"end":{"line":86,"column":104}},"53":{"start":{"line":87,"column":12},"end":{"line":90,"column":13}},"54":{"start":{"line":88,"column":16},"end":{"line":88,"column":66}},"55":{"start":{"line":89,"column":16},"end":{"line":89,"column":45}},"56":{"start":{"line":93,"column":8},"end":{"line":93,"column":61}},"57":{"start":{"line":94,"column":8},"end":{"line":94,"column":38}},"58":{"start":{"line":103,"column":8},"end":{"line":103,"column":42}},"59":{"start":{"line":104,"column":8},"end":{"line":104,"column":136}},"60":{"start":{"line":105,"column":8},"end":{"line":105,"column":81}},"61":{"start":{"line":106,"column":8},"end":{"line":111,"column":9}},"62":{"start":{"line":107,"column":12},"end":{"line":107,"column":76}},"63":{"start":{"line":108,"column":12},"end":{"line":108,"column":49}},"64":{"start":{"line":109,"column":12},"end":{"line":109,"column":69}},"65":{"start":{"line":110,"column":12},"end":{"line":110,"column":55}},"66":{"start":{"line":112,"column":8},"end":{"line":112,"column":34}},"67":{"start":{"line":120,"column":8},"end":{"line":120,"column":41}},"68":{"start":{"line":121,"column":8},"end":{"line":121,"column":136}},"69":{"start":{"line":122,"column":8},"end":{"line":148,"column":9}},"70":{"start":{"line":123,"column":30},"end":{"line":123,"column":63}},"71":{"start":{"line":124,"column":29},"end":{"line":124,"column":31}},"72":{"start":{"line":125,"column":12},"end":{"line":146,"column":13}},"73":{"start":{"line":126,"column":16},"end":{"line":145,"column":17}},"74":{"start":{"line":127,"column":20},"end":{"line":127,"column":77}},"75":{"start":{"line":128,"column":20},"end":{"line":128,"column":44}},"76":{"start":{"line":131,"column":45},"end":{"line":131,"column":47}},"77":{"start":{"line":132,"column":50},"end":{"line":132,"column":52}},"78":{"start":{"line":133,"column":20},"end":{"line":139,"column":21}},"79":{"start":{"line":134,"column":52},"end":{"line":134,"column":95}},"80":{"start":{"line":135,"column":24},"end":{"line":138,"column":25}},"81":{"start":{"line":136,"column":28},"end":{"line":136,"column":93}},"82":{"start":{"line":137,"column":28},"end":{"line":137,"column":76}},"83":{"start":{"line":140,"column":20},"end":{"line":144,"column":21}},"84":{"start":{"line":141,"column":24},"end":{"line":141,"column":48}},"85":{"start":{"line":142,"column":24},"end":{"line":142,"column":52}},"86":{"start":{"line":143,"column":24},"end":{"line":143,"column":80}},"87":{"start":{"line":147,"column":12},"end":{"line":147,"column":76}},"88":{"start":{"line":151,"column":0},"end":{"line":151,"column":50}},"89":{"start":{"line":155,"column":0},"end":{"line":155,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":51},"end":{"line":18,"column":52}},"loc":{"start":{"line":18,"column":63},"end":{"line":34,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":19,"column":18},"end":{"line":19,"column":19}},"loc":{"start":{"line":19,"column":30},"end":{"line":26,"column":5}},"line":19},"7":{"name":"(anonymous_7)","decl":{"start":{"line":20,"column":48},"end":{"line":20,"column":49}},"loc":{"start":{"line":20,"column":61},"end":{"line":24,"column":9}},"line":20},"8":{"name":"(anonymous_8)","decl":{"start":{"line":27,"column":11},"end":{"line":27,"column":12}},"loc":{"start":{"line":27,"column":26},"end":{"line":33,"column":5}},"line":27},"9":{"name":"(anonymous_9)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":30},"end":{"line":61,"column":5}},"line":56},"10":{"name":"(anonymous_10)","decl":{"start":{"line":66,"column":4},"end":{"line":66,"column":5}},"loc":{"start":{"line":66,"column":17},"end":{"line":71,"column":5}},"line":66},"11":{"name":"(anonymous_11)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":47},"end":{"line":95,"column":5}},"line":78},"12":{"name":"(anonymous_12)","decl":{"start":{"line":102,"column":4},"end":{"line":102,"column":5}},"loc":{"start":{"line":102,"column":36},"end":{"line":113,"column":5}},"line":102},"13":{"name":"(anonymous_13)","decl":{"start":{"line":119,"column":4},"end":{"line":119,"column":5}},"loc":{"start":{"line":119,"column":25},"end":{"line":149,"column":5}},"line":119}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":34,"column":4}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":34,"column":4}}],"line":18},"11":{"loc":{"start":{"line":20,"column":18},"end":{"line":24,"column":9}},"type":"binary-expr","locations":[{"start":{"line":20,"column":18},"end":{"line":20,"column":44}},{"start":{"line":20,"column":48},"end":{"line":24,"column":9}}],"line":20},"12":{"loc":{"start":{"line":22,"column":29},"end":{"line":22,"column":95}},"type":"if","locations":[{"start":{"line":22,"column":29},"end":{"line":22,"column":95}},{"start":{"line":22,"column":29},"end":{"line":22,"column":95}}],"line":22},"13":{"loc":{"start":{"line":28,"column":8},"end":{"line":28,"column":46}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":46}},{"start":{"line":28,"column":8},"end":{"line":28,"column":46}}],"line":28},"14":{"loc":{"start":{"line":28,"column":12},"end":{"line":28,"column":33}},"type":"binary-expr","locations":[{"start":{"line":28,"column":12},"end":{"line":28,"column":15}},{"start":{"line":28,"column":19},"end":{"line":28,"column":33}}],"line":28},"15":{"loc":{"start":{"line":30,"column":8},"end":{"line":30,"column":137}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":30,"column":137}},{"start":{"line":30,"column":8},"end":{"line":30,"column":137}}],"line":30},"16":{"loc":{"start":{"line":30,"column":78},"end":{"line":30,"column":137}},"type":"if","locations":[{"start":{"line":30,"column":78},"end":{"line":30,"column":137}},{"start":{"line":30,"column":78},"end":{"line":30,"column":137}}],"line":30},"17":{"loc":{"start":{"line":56,"column":16},"end":{"line":56,"column":28}},"type":"default-arg","locations":[{"start":{"line":56,"column":26},"end":{"line":56,"column":28}}],"line":56},"18":{"loc":{"start":{"line":58,"column":21},"end":{"line":58,"column":35}},"type":"binary-expr","locations":[{"start":{"line":58,"column":21},"end":{"line":58,"column":26}},{"start":{"line":58,"column":30},"end":{"line":58,"column":35}}],"line":58},"19":{"loc":{"start":{"line":59,"column":28},"end":{"line":59,"column":46}},"type":"binary-expr","locations":[{"start":{"line":59,"column":28},"end":{"line":59,"column":40}},{"start":{"line":59,"column":44},"end":{"line":59,"column":46}}],"line":59},"20":{"loc":{"start":{"line":60,"column":26},"end":{"line":60,"column":42}},"type":"binary-expr","locations":[{"start":{"line":60,"column":26},"end":{"line":60,"column":36}},{"start":{"line":60,"column":40},"end":{"line":60,"column":42}}],"line":60},"21":{"loc":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},{"start":{"line":68,"column":8},"end":{"line":70,"column":9}}],"line":68},"22":{"loc":{"start":{"line":80,"column":18},"end":{"line":80,"column":81}},"type":"binary-expr","locations":[{"start":{"line":80,"column":18},"end":{"line":80,"column":52}},{"start":{"line":80,"column":56},"end":{"line":80,"column":81}}],"line":80},"23":{"loc":{"start":{"line":84,"column":26},"end":{"line":84,"column":63}},"type":"binary-expr","locations":[{"start":{"line":84,"column":26},"end":{"line":84,"column":57}},{"start":{"line":84,"column":61},"end":{"line":84,"column":63}}],"line":84},"24":{"loc":{"start":{"line":87,"column":12},"end":{"line":90,"column":13}},"type":"if","locations":[{"start":{"line":87,"column":12},"end":{"line":90,"column":13}},{"start":{"line":87,"column":12},"end":{"line":90,"column":13}}],"line":87},"25":{"loc":{"start":{"line":104,"column":18},"end":{"line":104,"column":74}},"type":"binary-expr","locations":[{"start":{"line":104,"column":18},"end":{"line":104,"column":47}},{"start":{"line":104,"column":51},"end":{"line":104,"column":74}}],"line":104},"26":{"loc":{"start":{"line":107,"column":42},"end":{"line":107,"column":75}},"type":"binary-expr","locations":[{"start":{"line":107,"column":42},"end":{"line":107,"column":69}},{"start":{"line":107,"column":73},"end":{"line":107,"column":75}}],"line":107},"27":{"loc":{"start":{"line":121,"column":18},"end":{"line":121,"column":74}},"type":"binary-expr","locations":[{"start":{"line":121,"column":18},"end":{"line":121,"column":47}},{"start":{"line":121,"column":51},"end":{"line":121,"column":74}}],"line":121},"28":{"loc":{"start":{"line":123,"column":30},"end":{"line":123,"column":63}},"type":"binary-expr","locations":[{"start":{"line":123,"column":30},"end":{"line":123,"column":57}},{"start":{"line":123,"column":61},"end":{"line":123,"column":63}}],"line":123},"29":{"loc":{"start":{"line":126,"column":16},"end":{"line":145,"column":17}},"type":"if","locations":[{"start":{"line":126,"column":16},"end":{"line":145,"column":17}},{"start":{"line":126,"column":16},"end":{"line":145,"column":17}}],"line":126},"30":{"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":86}},"type":"binary-expr","locations":[{"start":{"line":133,"column":59},"end":{"line":133,"column":80}},{"start":{"line":133,"column":84},"end":{"line":133,"column":86}}],"line":133},"31":{"loc":{"start":{"line":135,"column":24},"end":{"line":138,"column":25}},"type":"if","locations":[{"start":{"line":135,"column":24},"end":{"line":138,"column":25}},{"start":{"line":135,"column":24},"end":{"line":138,"column":25}}],"line":135},"32":{"loc":{"start":{"line":140,"column":20},"end":{"line":144,"column":21}},"type":"if","locations":[{"start":{"line":140,"column":20},"end":{"line":144,"column":21}},{"start":{"line":140,"column":20},"end":{"line":144,"column":21}}],"line":140},"33":{"loc":{"start":{"line":140,"column":24},"end":{"line":140,"column":110}},"type":"binary-expr","locations":[{"start":{"line":140,"column":24},"end":{"line":140,"column":45}},{"start":{"line":140,"column":49},"end":{"line":140,"column":110}}],"line":140}},"s":{"0":1,"1":337,"2":337,"3":337,"4":337,"5":335,"6":140,"7":337,"8":0,"9":0,"10":0,"11":1,"12":2,"13":0,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":1,"24":2,"25":0,"26":2,"27":2,"28":2,"29":2,"30":2,"31":337,"32":337,"33":2,"34":2,"35":1,"36":1,"37":1,"38":1,"39":10,"40":10,"41":10,"42":10,"43":115,"44":115,"45":2,"46":25,"47":25,"48":23,"49":21,"50":21,"51":21,"52":14,"53":14,"54":13,"55":13,"56":21,"57":21,"58":13,"59":13,"60":11,"61":10,"62":14,"63":14,"64":14,"65":14,"66":10,"67":33,"68":33,"69":31,"70":35,"71":35,"72":35,"73":30,"74":3,"75":3,"76":27,"77":27,"78":27,"79":39,"80":39,"81":18,"82":18,"83":27,"84":11,"85":11,"86":11,"87":35,"88":1,"89":1},"f":{"0":337,"1":140,"2":0,"3":2,"4":0,"5":1,"6":1,"7":0,"8":2,"9":10,"10":115,"11":25,"12":13,"13":33},"b":{"0":[1,1,1],"1":[1,0],"2":[337,0],"3":[335,2],"4":[337,337],"5":[0,337],"6":[337,6],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[1,0],"12":[0,0],"13":[0,2],"14":[2,2],"15":[2,0],"16":[337,0],"17":[4],"18":[10,7],"19":[10,8],"20":[10,8],"21":[2,113],"22":[25,24],"23":[21,7],"24":[13,1],"25":[13,12],"26":[14,10],"27":[33,32],"28":[35,7],"29":[3,27],"30":[27,1],"31":[18,21],"32":[11,16],"33":[27,26]},"inputSourceMap":{"version":3,"file":"/Users/ark/GitHub/node-dependency-injection/src/index.ts","sources":["/Users/ark/GitHub/node-dependency-injection/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import * as _ from 'lodash';\nimport * as Assert from 'assert';\n\n/**\n * Resolver function type for dependency injection\n */\nexport type ResolverFunction = (...args: any[]) => void;\n\n/**\n * Resolver with additional properties for tracking state\n */\nexport interface Resolver extends ResolverFunction {\n  dependencies?: string[];\n  is_resolved?: boolean;\n  name?: string;\n}\n\n/**\n * Options for DependencyInjection constructor\n */\nexport interface DependencyInjectionOptions {\n  debug?: boolean;\n  dependencies?: Record<string, any>;\n  dependants?: Record<string, Resolver[]>;\n}\n\n/**\n * @class DependencyInjection\n * Provides dependency injection for Node.js\n * - Allows dependency injection for sync/async resolvers\n * - Resolves dependencies lazily if there are not provided before resolvers\n */\nexport class DependencyInjection {\n  private debug: boolean;\n  private dependencies: Record<string, any>;\n  private dependants: Record<string, Resolver[]>;\n\n  /**\n   * @constructor\n   * @param options - Optional configuration object\n   *   - debug - Enables/Disables Debug Flag to show log statements, etc\n   *   - dependencies - Initialize map of dependencies that maps dependency name -> dependency\n   *   - dependants - Initialize map of dependants that maps dependency name -> list of resolver functions\n   */\n  constructor(options: DependencyInjectionOptions = {}) {\n    const { debug, dependencies, dependants } = options;\n    this.debug = debug || false;\n    this.dependencies = dependencies || {};\n    this.dependants = dependants || {};\n  }\n\n  /**\n   * Logger instance that matches signature of console.log\n   * @public\n   */\n  private log(...args: any[]): void {\n    args[0] = '[DependencyInjection] ' + args[0];\n    if (this.debug) {\n      console.log.apply(console, args);\n    }\n  }\n\n  /**\n   * Registers dependency name/key -> dependency\n   * @public\n   * @param dependency_key - Dependency name/key\n   * @param dependency_value - Dependency value\n   */\n  register(dependency_key: string, dependency_value: any): void {\n    this.log('register', arguments);\n    Assert.ok(\n      typeof dependency_key === 'string' && dependency_key.length > 0,\n      'Dependency name/key has to be passed as a non-empty string'\n    );\n    Assert.ok(dependency_value !== undefined, 'Dependency (value) is required');\n\n    // Reset resolvers if new dependency is being injected\n    const old_dependency_value = this.dependencies[dependency_key];\n    const resolvers = this.dependants[dependency_key] || [];\n    for (const resolver of resolvers) {\n      this.log(`Checking resolver ${resolver}; Is it already resolved = ${resolver.is_resolved}`);\n      if (JSON.stringify(dependency_value) !== JSON.stringify(old_dependency_value)) {\n        this.log(`Resetting Resolver (${resolver.name})`);\n        resolver.is_resolved = false;\n      }\n    }\n\n    // Set dependencies prior to injecting them into resolvers\n    this.dependencies[dependency_key] = dependency_value;\n    this.inject([dependency_key]);\n  }\n\n  /**\n   * Resolves a list of dependencies and invokes a resolver function with those dependencies as arguments\n   * @public\n   * @param dependencies - List of dependency keys to be resolved\n   * @param resolver - Function to be invoked when dependencies are resolved. All dependencies are passed as arguments to the resolver function.\n   */\n  resolve(dependencies: string[], resolver: ResolverFunction): void {\n    this.log('resolve', dependencies);\n    Assert.ok(\n      dependencies instanceof Array && dependencies.length > 0,\n      'Dependencies have to be a non-empty list of dependencies'\n    );\n    Assert.ok(resolver instanceof Function, 'Resolver has to be a function');\n\n    for (const dependency of dependencies) {\n      this.dependants[dependency] = this.dependants[dependency] || [];\n      (resolver as Resolver).dependencies = dependencies;\n      this.log('resolver dependencies', (resolver as Resolver).dependencies);\n      this.dependants[dependency].push(resolver as Resolver);\n    }\n    this.inject(dependencies);\n  }\n\n  /**\n   * Injects list of dependencies to its resolvers\n   * @public\n   * @param dependencies - List of dependency keys to be resolved\n   */\n  inject(dependencies: string[]): void {\n    this.log('inject', dependencies);\n    Assert.ok(\n      dependencies instanceof Array && dependencies.length > 0,\n      'Dependencies have to be a non-empty list of dependencies'\n    );\n\n    for (const dependency of dependencies) {\n      const resolvers = this.dependants[dependency] || [];\n      const resolved: Resolver[] = [];\n\n      for (const resolver of resolvers) {\n        if (resolver.is_resolved) {\n          this.log(`Resolver (${resolver.name}) already resolved`);\n          resolved.push(resolver);\n        } else {\n          const resolver_context: Record<string, any> = {};\n          const resolver_dependencies: any[] = [];\n          for (const resolver_dependency_name of resolver.dependencies || []) {\n            const resolver_dependency = this.dependencies[resolver_dependency_name];\n            if (resolver_dependency != null) {\n              resolver_context[resolver_dependency_name] = resolver_dependency;\n              resolver_dependencies.push(resolver_dependency);\n            }\n          }\n\n          if (resolver.dependencies && resolver_dependencies.length === resolver.dependencies.length) {\n            resolved.push(resolver);\n            resolver.is_resolved = true;\n            resolver.apply(resolver_context, resolver_dependencies);\n          }\n        }\n      }\n\n      this.dependants[dependency] = _.without(resolvers, ...resolved);\n    }\n  }\n}\n\n/**\n * @module DependencyInjection\n */\nexport default DependencyInjection;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1308df5bf2e01bf1407a793fe4c02c431a9570b2","contentHash":"f965dc6be16f50645b78bfe03b8c072005e5398378c968dbd54d4e335225f833"}}